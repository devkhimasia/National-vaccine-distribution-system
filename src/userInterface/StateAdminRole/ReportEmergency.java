/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.StateAdminRole;

import business.Vaccine;
import business.enterprise.CdcEnterprise;
import business.enterprise.Enterprise;
import business.enterprise.PhdEnterprise;
import business.network.Network;
import business.organization.DistributorOrganization;
import business.organization.HospitalOrganization;
import business.organization.ManufactureOrganization;
import business.organization.Organization;
import business.organization.ProviderOrganization;
import business.workQueue.EmergencyREquest;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dev
 */
public class ReportEmergency extends javax.swing.JPanel {

    /**
     * Creates new form ReportEmergency
     */
    JPanel userProcessContainer; Enterprise e; Network n;

   public ReportEmergency(JPanel userProcessContainer, Enterprise e, Network n) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.e=e;
        this.n=n;
        DefaultTableModel dtm  = (DefaultTableModel)jTable1.getModel();
        dtm.setRowCount(0);
        CdcEnterprise cdc = (CdcEnterprise) n.getEnterpriseDirectory().getEnterpriseList().get(0);
        for(Organization o: cdc.getOrganizationDirectory().getOrganizationList()){
            if(o instanceof DistributorOrganization){
                for(Organization o2: o.getOrganizationDirectory().getOrganizationList()){
                    if(o2 instanceof ManufactureOrganization){
                        ManufactureOrganization mo = (ManufactureOrganization)o2;
                        for(Vaccine v: mo.getProductCatalog()){
                            Object row[] = new Object[2];
                            row[0] = v;
                            row[1] = v.getName();
                            dtm.addRow(row);
                        }
                    }
                }
            }
        }
    // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 151;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(58, 32, 0, 0);
        add(jTextField1, gridBagConstraints);

        jLabel2.setText("Quantity desired");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(61, 139, 0, 0);
        add(jLabel2, gridBagConstraints);

        jButton1.setText("BroadCast");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 24;
        gridBagConstraints.ipady = 37;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(68, 21, 269, 0);
        add(jButton1, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Vaccine ID", "Name"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 429;
        gridBagConstraints.ipady = 129;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(19, 79, 0, 78);
        add(jScrollPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       int s = jTable1.getSelectedRow();
       if(s<0){
           return;
       }
       else{
           Vaccine v = (Vaccine)jTable1.getValueAt(s, 0);
        ProviderOrganization po = null;
        for(Organization o3 : e.getOrganizationDirectory().getOrganizationList()){
            if(o3 instanceof ProviderOrganization)
                po=(ProviderOrganization)o3;
        }
        EmergencyREquest er = new EmergencyREquest();
        er.setSender(e);
        er.setStatus("Active");
        er.setProvider(po);
        er.setQuantity(Integer.parseInt(jTextField1.getText()));
        er.setVaccine(v);
        for(Network n1: n.getStateList()){
              for(Enterprise e1: n1.getEnterpriseDirectory().getEnterpriseList()){
                  if(e1 instanceof PhdEnterprise && !e.equals(e1)){
                      for(Organization o2: e1.getOrganizationDirectory().getOrganizationList()){
                          if(o2 instanceof HospitalOrganization){
                              o2.getWorkQueue().getWorkRequestList().add(er);
                          }
                      }
                  }
              }
          }
    }//GEN-LAST:event_jButton1ActionPerformed
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
