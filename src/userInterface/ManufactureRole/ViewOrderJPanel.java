/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.ManufactureRole;

import business.OrderItem;
import business.enterprise.CdcEnterprise;
import business.organization.DistributorOrganization;
import business.organization.ManufactureOrganization;
import business.organization.Organization;
import business.organization.ShipperOrganization;
import business.workQueue.DistributorVaccineOrder;
import business.workQueue.PaymentRequest;
import business.workQueue.ShipmentRequest;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dev
 */
public class ViewOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewOrderJPanel
     */
    CdcEnterprise enterprise;
    JPanel userProcessContainer;
    DistributorVaccineOrder cor;
    ManufactureOrganization o;
    DistributorOrganization distributorOrg;

    ViewOrderJPanel(JPanel userProcessContainer, DistributorVaccineOrder cor, ManufactureOrganization o, DistributorOrganization distributorOrg, CdcEnterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.cor = cor;
        this.enterprise = enterprise;
        this.o = o;
        this.distributorOrg = distributorOrg;
        System.out.println(enterprise.getName());
        populate();
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        if (cor.getStatus().equalsIgnoreCase("Forwarded to Manufacturer")) {
            System.out.println("hereee");
            String address = cor.getWarehouse().getStreet() + " ," + cor.getWarehouse().getCity() + " ," + cor.getWarehouse().getState() + " ," + cor.getWarehouse().getPin();
            txtAddress.setText(address);

            for (OrderItem oi : cor.getOrder().getOrder()) {
                Object row[] = new Object[4];
                row[0] = oi.getProduct();
                row[1] = oi.getProduct().getName();
                row[2] = oi.getQuantity();
                row[3] = cor.getStatus();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Vaccine ID", "Vaccine", "Order Quantity", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 809;
        gridBagConstraints.ipady = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 30, 0, 10);
        add(jScrollPane1, gridBagConstraints);

        txtAddress.setEditable(false);
        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane2.setViewportView(txtAddress);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 191;
        gridBagConstraints.ipady = 102;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 22, 149, 0);
        add(jScrollPane2, gridBagConstraints);

        jLabel1.setText("Shipping Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 22, 0, 0);
        add(jLabel1, gridBagConstraints);

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jButton1.setText("Generate Shipment Request");
        jButton1.setBorder(new javax.swing.border.MatteBorder(null));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 34;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        add(jButton1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 55, 0, 0);
        add(jDateChooser1, gridBagConstraints);

        jLabel2.setText("Expiry Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 55, 0, 0);
        add(jLabel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if(jDateChooser1.getDate()==null){
    JOptionPane.showMessageDialog(null, "Please enter expiry date.");
    return;
}
else{
        cor.setStatus("Forwarded to Shipment");
        cor.getOrder().setStatus("Forwarded to Shipment");
        Date d = jDateChooser1.getDate();
        System.out.println(d);
        for (OrderItem o1 : cor.getOrder().getOrder()) {
            o1.setExpiryDate(d);
        }
        ShipmentRequest sr = new ShipmentRequest();
        sr.setSender(o);
        sr.setReceiver(cor.getWarehouse());

        sr.setStatus("Forwarded to Shipment");
        sr.setDvo(cor);
        for (Organization o2 : distributorOrg.getOrganizationDirectory().getOrganizationList()) {
            if (o2 instanceof ShipperOrganization) {
                o2.getWorkQueue().getWorkRequestList().add(sr);
                o.getWorkQueue().getWorkRequestList().add(sr);
                populate();
            }
        }
        OrderItem oi = cor.getOrder().getOrder().get(0);

        //System.out.println(oi.getProduct().getName());
        if(oi.getProduct().getType()!="Federally Funded"){
            PaymentRequest pr = new PaymentRequest();
            pr.setSender(o);
            pr.setReceiver(distributorOrg);
            pr.setStatus("Invoice Sent to Distributor");
            pr.setOrder(cor.getOrder());
            pr.setPaymentAmount(cor.getOrder().getTotalAmount());
            o.getWorkQueue().getWorkRequestList().add(pr);
            distributorOrg.getWorkQueue().getWorkRequestList().add(pr);
        }
         else {
            if (oi.getProduct().getType() == "Federally Funded") {
                System.out.println("sending to cdc");
                PaymentRequest pr = new PaymentRequest();
                pr.setSender(o);
                pr.setReceiver(enterprise);
                pr.setStatus("Invoice Sent to CDC");
                pr.setOrder(cor.getOrder());
                pr.setPaymentAmount(cor.getOrder().getTotalAmount());
                o.getWorkQueue().getWorkRequestList().add(pr);
                enterprise.getWorkQueue().getWorkRequestList().add(pr);
            }}
        populate();
    }//GEN-LAST:event_jButton1ActionPerformed
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea txtAddress;
    // End of variables declaration//GEN-END:variables
}
