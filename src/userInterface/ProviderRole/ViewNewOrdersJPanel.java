/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.ProviderRole;

import business.enterprise.Enterprise;
import business.organization.HospitalOrganization;
import business.organization.ProviderOrganization;
import business.workQueue.ClinicOrderRequest;
import business.workQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dev
 */
public class ViewNewOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewNewOrdersJPanel
     */
   JPanel userProcessContainer;
    Enterprise e;
    ProviderOrganization providerOrganization;

    public ViewNewOrdersJPanel(JPanel userProcessContainer, ProviderOrganization providerOrganization, Enterprise e) {
        initComponents();
        this.providerOrganization = providerOrganization;
        this.userProcessContainer = userProcessContainer;
        this.e=e;
        
        populate();
//throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
public void populate(){
    DefaultTableModel dtm = (DefaultTableModel)tblClinicOrders.getModel();
    dtm.setRowCount(0);
   
    
    for(WorkRequest w: providerOrganization.getWorkQueue().getWorkRequestList()){
        if(w instanceof ClinicOrderRequest){
            ClinicOrderRequest c = (ClinicOrderRequest) w;
            if(c.getStatus()=="Forwarded to Provider"){
            Object row[] = new Object[4];
            row[0]= c;
            if(c.getHospOrg()==null){
                row[1] = c.getSender();
                row[2]="NA";
            }
            else{
            row[1] = c.getHospOrg().getName();
            row[2] = c.getSender().getName();
            }
            row[3] = c.getOrder().getTimestamp();
            dtm.addRow(row);
            }
        }
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        tblClinicOrders = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnApprove = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridBagLayout());

        tblClinicOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order ID", "Hospital", "Clinic name", "Ordrer Date"
            }
        ));
        jScrollPane1.setViewportView(tblClinicOrders);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 554;
        gridBagConstraints.ipady = 115;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(27, 20, 0, 10);
        add(jScrollPane1, gridBagConstraints);

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jButton1.setText("View Order");
        jButton1.setBorder(new javax.swing.border.MatteBorder(null));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 36;
        gridBagConstraints.ipady = 22;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 136, 0, 0);
        add(jButton1, gridBagConstraints);

        btnApprove.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        btnApprove.setText("Forward to State PHD");
        btnApprove.setBorder(new javax.swing.border.MatteBorder(null));
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 75;
        gridBagConstraints.ipady = 22;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 77, 0, 0);
        add(btnApprove, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jButton2.setText("Verify License");
        jButton2.setBorder(new javax.swing.border.MatteBorder(null));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 49;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(100, 120, 0, 0);
        add(jButton2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 79;
        gridBagConstraints.ipady = 77;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(83, 29, 107, 0);
        add(jLabel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        for (int i = 0; i <= tblClinicOrders.getRowCount(); i++) {
            if (tblClinicOrders.isRowSelected(i)) {
                ClinicOrderRequest cor = (ClinicOrderRequest) tblClinicOrders.getValueAt(i, 0);
                cor.setStatus("Forwarded to State Dept");
                cor.getOrder().setStatus("Forwarded to State Dept");
                e.getWorkQueue().getWorkRequestList().add(cor);
                populate();
            }
        }
    }//GEN-LAST:event_btnApproveActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       int s = tblClinicOrders.getSelectedRow();
       if(s<0){
           return;
       }
       else{
           ClinicOrderRequest cor = (ClinicOrderRequest) tblClinicOrders.getValueAt(s, 0);
            HospitalOrganization ho=null;
           if(cor.getHospOrg()==null){
                 ho = (HospitalOrganization) cor.getSender();
           }
           else{
                 ho = cor.getHospOrg();
           }
          
           if(ho.getExpiry().before(new Date())){
               jLabel1.setIcon((new javax.swing.ImageIcon(getClass().getResource("/userInterface/providerRole/invalid.png"))));
           }
           else{
               jLabel1.setIcon((new javax.swing.ImageIcon(getClass().getResource("/userInterface/providerRole/valid.png"))));
           }
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      int s = tblClinicOrders.getSelectedRow();
        if(s<0){
            return;
        }
        else{
            ClinicOrderRequest cor = (ClinicOrderRequest)tblClinicOrders.getValueAt(s, 0);
           ViewOrderItemsJPanel h= new ViewOrderItemsJPanel(userProcessContainer,cor);
        CardLayout l = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("ViewOrderItemsJPanel",h);
        l.next(userProcessContainer);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblClinicOrders;
    // End of variables declaration//GEN-END:variables
}
