/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.HospitalRole;

import business.enterprise.Enterprise;
import business.organization.HospitalOrganization;
import business.organization.Organization;
import business.organization.ProviderOrganization;
import business.workQueue.ClinicOrderRequest;
import business.workQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dev
 */
public class ManageClinicOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageClinicOrderJPanel
     */
    JPanel userProcessContainer;
    HospitalOrganization o;
    //ArrayList<Integer> chk;
    Enterprise e;

    public ManageClinicOrderJPanel(JPanel userProcessContainer, HospitalOrganization o, Enterprise e) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.o = o;
        // chk = new ArrayList<>();
        this.e = e;
        populate();
//  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) tblClinicOrders.getModel();
        dtm.setRowCount(0);

        for (WorkRequest w : o.getWorkQueue().getWorkRequestList()) {
            if (w instanceof ClinicOrderRequest) {
                ClinicOrderRequest c = (ClinicOrderRequest) w;
                if (c.getStatus() == "Forwarded to Hospital") {
                    Object row[] = new Object[3];
                    row[0] = c;
                    row[1] = c.getSender().getName();
                    row[2] = c.getOrder().getTimestamp();
                    dtm.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        tblClinicOrders = new javax.swing.JTable();
        btnApprove = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridBagLayout());

        tblClinicOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Order ID", "Clinic name", "Ordrer Date"
            }
        ));
        jScrollPane1.setViewportView(tblClinicOrders);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 619;
        gridBagConstraints.ipady = 94;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(27, 20, 0, 99);
        add(jScrollPane1, gridBagConstraints);

        btnApprove.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnApprove.setText("Forward to Provider");
        btnApprove.setBorder(new javax.swing.border.MatteBorder(null));
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 73;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 18, 285, 0);
        add(btnApprove, gridBagConstraints);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("View Order");
        jButton1.setBorder(new javax.swing.border.MatteBorder(null));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 85;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 18, 285, 0);
        add(jButton1, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Process from Inventory");
        jButton2.setBorder(new javax.swing.border.MatteBorder(null));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 66;
        gridBagConstraints.ipady = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 20, 285, 0);
        add(jButton2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        for (int i = 0; i <= tblClinicOrders.getRowCount(); i++) {
            if (tblClinicOrders.isRowSelected(i)) {
                ClinicOrderRequest cor = (ClinicOrderRequest) tblClinicOrders.getValueAt(i, 0);
                cor.setStatus("Forwarded to Provider");
                cor.getOrder().setStatus("Forwarded to Provider");
                cor.setHospOrg(o);
                for (Organization o12 : e.getOrganizationDirectory().getOrganizationList()) {
                    if (o12 instanceof ProviderOrganization) {
                        o12.getWorkQueue().getWorkRequestList().add(cor);
                        o.getWorkQueue().getWorkRequestList().add(cor);
                        populate();
                    }
                }
            }
        }
    }//GEN-LAST:event_btnApproveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int s = tblClinicOrders.getSelectedRow();
        if (s < 0) {
            return;
        } else {
            ClinicOrderRequest cor = (ClinicOrderRequest) tblClinicOrders.getValueAt(s, 0);
            ViewOrderJPanel h = new ViewOrderJPanel(userProcessContainer, cor);
            CardLayout l = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("SentPaymentJPanelDis", h);
            l.next(userProcessContainer);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         int s = tblClinicOrders.getSelectedRow();
        if (s < 0) {
            return;
        } else {
            ClinicOrderRequest cor = (ClinicOrderRequest) tblClinicOrders.getValueAt(s, 0);
            ProcessOrder h = new ProcessOrder(userProcessContainer, cor,o);
            CardLayout l = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("ProcessOrder", h);
            l.next(userProcessContainer);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblClinicOrders;
    // End of variables declaration//GEN-END:variables
}
