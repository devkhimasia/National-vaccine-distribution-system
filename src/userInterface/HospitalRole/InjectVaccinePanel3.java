/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.HospitalRole;

import business.Patient;
import business.Vaccine;
import business.VaccineDelivery;
import business.enterprise.CdcEnterprise;
import business.inventory.Inventory;
import business.inventory.InventoryItem;
import business.organization.HospitalOrganization;
import business.organization.InsuranceOrganization;
import business.workQueue.InjectVaccine;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dev
 */
public class InjectVaccinePanel3 extends javax.swing.JPanel {

    /**
     * Creates new form InjectVaccinePanel3
     */
    JPanel userProcessContainer;
    HospitalOrganization o;
    CdcEnterprise e;
    Patient patient;

    public InjectVaccinePanel3(JPanel userProcessContainer, HospitalOrganization o, CdcEnterprise e, Patient patient) {
        initComponents();// throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        this.userProcessContainer = userProcessContainer;
        this.o = o;
        this.e = e;
        this.patient = patient;
        populate();
    }

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        for (Inventory i : o.getInventoryCatalog().getInventoryList()) {
            Object row[] = new Object[2];
            row[0] = i;
            row[1] = i.getVaccine().getName();
            //row[2] = i.getTotalQuantity();
            dtm.addRow(row);
        }
    }

    public void populateItemList(Inventory i) {
        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        dtm.setRowCount(0);
        for (Inventory inventory : o.getInventoryCatalog().getInventoryList()) {
            if (i.equals(inventory)) {
                for (InventoryItem ii : i.getInventoryItemList()) {
                    if(ii.getQuantity()>0){
                    Object row[] = new Object[4];
                    row[0] = ii;
                    row[1] = ii.getVaccine().getName();
                    row[2] = ii.getQuantity();
                    row[3] = ii.getExpiry();
                    dtm.addRow(row);
                    }
                }
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        txtprice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine ID", "Vaccine"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 25, -1, 127));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Vaccine", "Batch Quantity", "Expiry"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 192, -1, 131));

        jButton1.setText(">>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 163, -1, -1));
        add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 372, 129, -1));

        jLabel1.setText("Applied By");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 375, -1, -1));

        jLabel2.setText("Where was it given");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 380, 130, -1));
        add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 380, 159, -1));

        jLabel3.setText("Extra Details");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 446, -1, -1));

        txtDesc.setColumns(20);
        txtDesc.setRows(5);
        jScrollPane3.setViewportView(txtDesc);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 446, 274, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Shoot");
        jButton2.setBorder(new javax.swing.border.MatteBorder(null));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(486, 459, 104, 65));

        txtprice.setEditable(false);
        add(txtprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 334, 94, -1));

        jLabel4.setText("Price");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(263, 337, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int s = jTable1.getSelectedRow();
        if (s < 0) {
            return;
        } else {
            Inventory i = (Inventory) jTable1.getValueAt(s, 0);
            txtprice.setText(String.valueOf(i.getVaccine().getPatientPrice()));
            populateItemList(i);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String by = jTextField1.getText();
        
        String position = jTextField2.getText();
        String extra = txtDesc.getText();
        int s = jTable2.getSelectedRow();
        if (s < 0) {
            JOptionPane.showMessageDialog(null, "Please select vaccine");
            return;
        } else {
            o.setTotalVaccine(o.getTotalVaccine() + 1);
            InventoryItem ii = (InventoryItem) jTable2.getValueAt(s, 0);
            Vaccine v = ii.getVaccine();
            int a = ii.getQuantity();
            ii.setQuantity(a - 1);
            VaccineDelivery vd = new VaccineDelivery();
            vd.setClinicName(o);
            vd.setAppliedBy(by);
            vd.setExtra(extra);
            vd.setPosition(position);
            vd.setRate(v.getPatientPrice());
            vd.setVaccine(v);
            patient.getHistory().add(vd);
            if (v.getType() == "Federally Funded") {
                InjectVaccine ij = new InjectVaccine();
                ij.setSender(o);
                ij.setReceiver(e);
                ij.setVd(vd);
                ij.setP(patient);
                ij.setAmount(v.getPatientPrice());
                ij.setStatus("Bill forwarded to CDC");
                e.getWorkQueue().getWorkRequestList().add(ij);
                o.getWorkQueue().getWorkRequestList().add(ij);
                System.out.println("1");
            } else if (v.getType() != "Federally Funded") {
                if (patient.getInsurance() == null || patient.getCoverageAmt()==0 ||  new Date().after(patient.getValidTill())) {
                    JOptionPane.showMessageDialog(null, "Collect "+v.getPatientPrice()+"$ from the Patient");
                    return;
                } else if (new Date().before(patient.getValidTill())) {
                    //System.out.println("3");
                    int coverage = patient.getCoverageLeft();
                    int price = v.getPatientPrice();
                    if (coverage > price) {
                       // System.out.println("4");
                        InjectVaccine ij = new InjectVaccine();
                        ij.setSender(o);
                        ij.setAmount(price);
                        ij.setVd(vd);
                        ij.setP(patient);
                        ij.setStatus("Bill forwarded to Insurance");
                        System.out.println("hereinsurance");
                        InsuranceOrganization io = patient.getInsurance();
                        io.getWorkQueue().getWorkRequestList().add(ij);
                        o.getWorkQueue().getWorkRequestList().add(ij);
                        
                        patient.setCoverageLeft(patient.getCoverageAmt() - price);
                    } else {
                       // System.out.println("5");
                        int diff = price - coverage;
                        InjectVaccine ij = new InjectVaccine();
                        ij.setSender(o);
                        ij.setAmount(coverage);
                        
                        ij.setVd(vd);
                        ij.setP(patient);
                        ij.setStatus("Bill forwarded to Insurance");
                        InsuranceOrganization io = patient.getInsurance();
                        ij.setReceiver(io);
                        io.getWorkQueue().getWorkRequestList().add(ij);
                        o.getWorkQueue().getWorkRequestList().add(ij);
                         patient.setCoverageAmt(0);
                         patient.setCoverageLeft(0);
                        JOptionPane.showMessageDialog(null, "$"+coverage+" forwarded to Insurance company. "+"$"+diff+" to be collected from the patient.");
//                        
//                        InjectVaccine ij1 = new InjectVaccine();
//                        ij1.setSender(o);
//                        ij1.setAmount(diff);
//                        ij1.setVd(vd);
//                        ij1.setP(patient);
//                        ij1.setStatus("Bill forwarded to CDC");
//                        ij1.setReceiver(e);
//                        e.getWorkQueue().getWorkRequestList().add(ij1);
//                        o.getWorkQueue().getWorkRequestList().add(ij1);
                        
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JTextField txtprice;
    // End of variables declaration//GEN-END:variables
}
